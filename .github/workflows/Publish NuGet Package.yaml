on:
  push:
    branches:
      - master

env:
  DomeProjectPath: src/Pug.Dome
  EffableProjectPath: src/Pug.Effable
  DomeProject: Pug.Dome.csproj
  EffableProject: Pug.Effable.csproj

jobs:
  build:
    name: Build Projects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # Authenticates packages to push to GPR
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use.
          source-url: https://nuget.pkg.github.com/PugCS/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
      # Build, pack, and publish Pug.Dome NuGet package
      - name: Build Pug.Dome project
        run: dotnet build --nologo --configuration release ${{env.DomeProjectPath}}/${{env.DomeProject}}
      # Build, pack, and publish Pug.Effable NuGet package
      - name: Build Pug.Effable project
        run: dotnet build --nologo --configuration release ${{env.EffableProjectPath}}/${{env.EffableProject}}
        
      - name: Create Pug.Dome NuGet package
        run: dotnet pack --nologo --configuration release ${{env.DomeProjectPath}}/${{env.DomeProject}}
      - name: Create Pug.Effable NuGet package
        run: dotnet pack --nologo --configuration release ${{env.EffableProjectPath}}/${{env.EffableProject}}

      - name: Publish Pug.Dome NuGet package to GPR
        run: dotnet nuget push ${{env.DomeProjectPath}}/bin/release/*.nupkg --skip-duplicate
      - name: Publish Pug.Effable NuGet package to GPR
        run: dotnet nuget push ${{env.EffableProjectPath}}/bin/release/*.nupkg --skip-duplicate